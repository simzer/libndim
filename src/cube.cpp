
#include "cube.h"

namespace ndim {

Cube4D::Cube4D() {

	const double coordinates[][4] = {
		{ -0.5, -0.5, -0.5, -0.5  },
		{  0.5, -0.5, -0.5, -0.5  },
		{ -0.5, 0.5, -0.5, -0.5   },
		{  0.5, 0.5, -0.5, -0.5   },
		{ -0.5, -0.5, 0.5, -0.5   },
		{  0.5, -0.5, 0.5, -0.5   },
		{ -0.5, 0.5, 0.5, -0.5    },
		{  0.5, 0.5, 0.5, -0.5    },
		{ -0.5, -0.5, -0.5, 0.5   },
		{  0.5, -0.5, -0.5, 0.5   },
		{ -0.5, 0.5, -0.5, 0.5    },
		{  0.5, 0.5, -0.5, 0.5    },
		{ -0.5, -0.5, 0.5, 0.5    },
		{  0.5, -0.5, 0.5, 0.5    },
		{ -0.5, 0.5, 0.5, 0.5     },
		{  0.5, 0.5, 0.5, 0.5     }
	};
 
	const int facetIndexes[][4] =
	{
		{ 8, 12, 14, 10 }, { 9, 11, 15, 13 }, { 8, 9, 13, 12 },
		{ 10, 14, 15, 11 }, { 8, 10, 11, 9 }, { 12, 13, 15, 14 },
		{ 0, 4, 6, 2 }, { 1, 3, 7, 5 }, { 0, 1, 5, 4 },
		{ 2, 6, 7, 3 }, { 0, 2, 3, 1 }, { 4, 5, 7, 6 },
		{ 0, 8, 0xC, 4 }, { 0, 8, 0xA, 2 }, { 0xA, 2, 6, 0xE }, { 0xE, 6, 4, 0xC },
		{ 1, 9, 0xB, 3 }, { 0xB, 3, 7, 0xF }, { 7, 0xF, 0xD, 5 }, { 0xD, 5, 1, 9 },
		{ 0xC, 0xD, 5, 4 }, { 8, 9, 1, 0 }, { 0xA, 0xB, 3, 2 }, { 0xE, 0xF, 7, 6 }
	};

	for (int i = 0; i < sizeof(facetIndexes) / sizeof(facetIndexes[0]); i++) {
		Facet facet;
		for (int j = 0; j < 4; j++) {
			const double *coors = coordinates[facetIndexes[i][j]];
			facet.vertices.push_back(Vertex({ coors[0], coors[1], coors[2], coors[3] }));
		}
		facets.push_back(facet);
	}
}

}